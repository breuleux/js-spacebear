
require:
   "./util" ->
      tuck, identify, next-id
      ID, FORKID, VERSION, SOURCE, DIRECTORY, CACHE
      methods, fields
   "./struct" ->
      make-struct, struct
   "./proxy" ->
      proxy, deprox, reprox
      read-proxy, write-proxy
   "./iter" ->
      iterate-properties
   "./directory" ->
      Directory
   "./relevant" ->
      intersect, changed-relevantly
   "./root" ->
      Root
   "./vdom" ->
      VNode, ENode as EVNode
   "./reactive" ->
      System, reactive-function
      current-system

provide:
   identify, tuck
   ID, FORKID, VERSION, SOURCE, DIRECTORY, CACHE
   methods
   make-struct, struct
   proxy, deprox, reprox
   read-proxy, write-proxy
   Directory
   iterate-properties
   changed-relevantly
   intersect
   Root
   VNode, EVNode as ENode
   System, reactive-function
   current-system

   percent as [%]
   reactive

macro{EVNode} percent{#data{x, y}} =
   let {=> EVNode} = @deps
   `[^x % ^y] where ENode = [^EVNode]`

macro{reactive-function} reactive{expr} =
   let {"reactive-function" => rfn} = @deps
   {system, it, self} = @mark{`system`, `@`, `self`}
   @multimacro with {
      project{`^args -> ^body`} =
         ```
         [^rfn] with
            ^args ->
               let ^system = this.__SYSTEM
               let ^it and ^self = this
               ^body
         ```
   }

