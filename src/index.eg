
require:
   "./util" ->
      tuck, identify, next-id
      ID, FORKID, VERSION, SOURCE, DIRECTORY, CACHE
      methods
   "./struct" ->
      make-struct, struct
   "./proxy" ->
      proxy, read-proxy, write-proxy, deprox
   "./iter" ->
      iterate-properties
   "./directory" ->
      Directory
   "./relevant" ->
      intersect, changed-relevantly
   "./root" ->
      Root
   "./vdom" ->
      VNode, ENode as EVNode
   "./reactive" ->
      System, reactive-function

provide:
   identify, tuck
   ID, FORKID, VERSION, SOURCE, DIRECTORY, CACHE
   methods
   make-struct, struct
   proxy, read-proxy, write-proxy, deprox
   Directory
   iterate-properties
   changed-relevantly
   intersect
   Root
   VNode, EVNode as ENode, percent as [%]
   System, reactive-function

macro{EVNode} percent{#data{x, y}} =
   let {=> EVNode} = @deps
   `[^x % ^y] where ENode = [^EVNode]`
