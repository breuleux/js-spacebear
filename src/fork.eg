
require:
   "./util" ->
      tuck, identify, next-id, ID, FORKID, VERSION, SOURCE
   "./proxy" ->
      deprox
   "./directory" ->
      Directory

provide:
   fork, array-fork, object-fork


fork{match value, dir = Directory{}, duplicate = false} =

   null? or undefined? or Number? or String? or Symbol? or Boolean? ->
      value

   when not duplicate and dir.get{value[ID] or -1} ->
      dir.get{value[ID]}

   {fork => Function?} ->
      deprox{value}.fork{dir}

   Array? ->
      array-fork{deprox{value}, dir}

   else ->
      object-fork{deprox{value}, dir}


array-fork{identify! arr, dir} =
   rval = arr each x -> fork{x, dir}
   tuck{rval, ID, arr[ID]}
   tuck{rval, FORKID, next-id{}}
   tuck{rval, VERSION, 1}
   dir.enter{rval, false}
   rval


object-fork{match value, dir} =

   Object.is-frozen? ->
      throw E.spacebear.proxy with
         'Cannot fork frozen objects.'

   identify! obj ->
      rval = Object.create{Object.get-prototype-of{obj}}
      ;; dir[obj[ID]] = rval
      tuck{rval, ID, obj[ID]}
      tuck{rval, FORKID, next-id{}}
      tuck{rval, VERSION, 1}
      dir.enter{rval, false}
      items{obj} each {key, value} ->
         rval[key] = fork{value, dir}
      rval
