
provide:
   tuck
   ID, CLOBBERID, FORKID, VERSION, SOURCE, DIRECTORY, CACHE
   next-id, identify, fork-identify

tuck{obj, name, value, writable = true} =
   Object.define-property{obj, name} with {
      value = value
      enumerable = false
      writable = writable
      configurable = true
   }

ID = Symbol{.id}
FORKID = Symbol{.forkid}
VERSION = Symbol{.version}
SOURCE = Symbol{.source}
CLOBBERID = Symbol{.clobberid}
DIRECTORY = Symbol{.directory}
CACHE = Symbol{.cache}

var _id = 0

next-id{} =
   _id += 1
   _id

identify{match x} =
   null? or undefined? or Number? or String? or Symbol? or Boolean? ->
      x
   when x[ID] ->
      x
   else ->
      tuck{x, ID, next-id{}}
      x

fork-identify{match x} =
   null? or undefined? or Number? or String? or Symbol? or Boolean? ->
      x
   when x[FORKID] ->
      x
   else ->
      tuck{x, FORKID, next-id{}}
      x

